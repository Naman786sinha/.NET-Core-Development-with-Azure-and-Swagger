# This is a basic workflow to help you get started with Actions

name: Dotnet Swagger

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      logslevel:
        description: "Settheloglevel"
        required: true
        default: "warning"

env:
  AZURE_WEBAPP_NAME: "aspdotnetswagger"
  AZURE_WEBAPP_PACKAGE_PATH: "./webapp"
  
defaults:
  run:
    shell: bash
    working-directory: "DotNet-Azure-Swagger/myProject/"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Building Dotnet Project
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          # Optional SDK version(s) to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: "3.1.101" # optional
          # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword

      - name: Restore packages
        run: dotnet restore
      
      - name: Dotnet Build
        run: dotnet build --configuration Release --no-restore
        
      - name: Dotnet Test
        run: dotnet test --no-build
        
      - name: Dotnet Publish
        run: dotnet publish  --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.0
        with:
          # Artifact name
          name: webapp# optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{ github.workspace }}
          # The desired behavior if no files are found using the provided path.

             
             
     
      
      

#   deploy:
#     needs: build
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run:  echo "This is CD"
